{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ThunderCat - 20052024\\\\src\\\\components\\\\PerfilPost.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CenteredContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 2vh;\n`;\n_c = CenteredContainer;\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 20px;\n    padding: 15px;\n    background-color: #fff;\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\n    margin: 0 auto;\n    max-width: 800px;\n    \n    @media (max-width: 768px) {\n        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n        gap: 10px;\n    }\n\n    @media (max-width: 480px) {\n        grid-template-columns: 1fr; /* Uma coluna em dispositivos com largura máxima de 480px */\n        padding: 10px; /* Reduzindo o padding */\n    }\n`;\n_c2 = Container;\nconst StyledImg = styled.img`\n    max-width: 100%;\n    height: auto;\n    border-radius: 10px;\n`;\n_c3 = StyledImg;\nfunction PerfilPost() {\n  // Função para gerar URLs de imagens aleatórias\n  const getRandomImage = () => {\n    const width = Math.floor(Math.random() * (400 - 200 + 1)) + 200; // largura aleatória entre 200 e 400\n    const height = Math.floor(Math.random() * (400 - 200 + 1)) + 200; // altura aleatória entre 200 e 400\n    return `https://via.placeholder.com/${width}x${height}`;\n  };\n\n  // Preenchendo o array de imagens com imagens aleatórias\n  const images = Array(3).fill().map(getRandomImage);\n  return /*#__PURE__*/_jsxDEV(CenteredContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(StyledImg, {\n        src: image,\n        alt: `Post ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_c4 = PerfilPost;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CenteredContainer\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"StyledImg\");\n$RefreshReg$(_c4, \"PerfilPost\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","CenteredContainer","div","_c","Container","_c2","StyledImg","img","_c3","PerfilPost","getRandomImage","width","Math","floor","random","height","images","Array","fill","map","children","image","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/ThunderCat - 20052024/src/components/PerfilPost.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CenteredContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 2vh;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    gap: 20px;\r\n    padding: 15px;\r\n    background-color: #fff;\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    \r\n    @media (max-width: 768px) {\r\n        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n        gap: 10px;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n        grid-template-columns: 1fr; /* Uma coluna em dispositivos com largura máxima de 480px */\r\n        padding: 10px; /* Reduzindo o padding */\r\n    }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n    max-width: 100%;\r\n    height: auto;\r\n    border-radius: 10px;\r\n`;\r\n\r\nfunction PerfilPost() {\r\n    // Função para gerar URLs de imagens aleatórias\r\n    const getRandomImage = () => {\r\n        const width = Math.floor(Math.random() * (400 - 200 + 1)) + 200; // largura aleatória entre 200 e 400\r\n        const height = Math.floor(Math.random() * (400 - 200 + 1)) + 200; // altura aleatória entre 200 e 400\r\n        return `https://via.placeholder.com/${width}x${height}`;\r\n    };\r\n\r\n    // Preenchendo o array de imagens com imagens aleatórias\r\n    const images = Array(3).fill().map(getRandomImage);\r\n\r\n    return (\r\n        <CenteredContainer>\r\n            <Container>\r\n                {images.map((image, index) => (\r\n                    <StyledImg key={index} src={image} alt={`Post ${index + 1}`} />\r\n                ))}\r\n            </Container>\r\n        </CenteredContainer>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,iBAAiB,GAAGH,MAAM,CAACI,GAAI;AACrC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,iBAAiB;AAMvB,MAAMG,SAAS,GAAGN,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAnBID,SAAS;AAqBf,MAAME,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,SAAS;AAMf,SAASG,UAAUA,CAAA,EAAG;EAClB;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACjE,MAAMC,MAAM,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAClE,OAAQ,+BAA8BH,KAAM,IAAGI,MAAO,EAAC;EAC3D,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAACT,cAAc,CAAC;EAElD,oBACIV,OAAA,CAACC,iBAAiB;IAAAmB,QAAA,eACdpB,OAAA,CAACI,SAAS;MAAAgB,QAAA,EACLJ,MAAM,CAACG,GAAG,CAAC,CAACE,KAAK,EAAEC,KAAK,kBACrBtB,OAAA,CAACM,SAAS;QAAaiB,GAAG,EAAEF,KAAM;QAACG,GAAG,EAAG,QAAOF,KAAK,GAAG,CAAE;MAAE,GAA5CA,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE5B;AAACC,GAAA,GApBQpB,UAAU;AAAA,IAAAN,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}