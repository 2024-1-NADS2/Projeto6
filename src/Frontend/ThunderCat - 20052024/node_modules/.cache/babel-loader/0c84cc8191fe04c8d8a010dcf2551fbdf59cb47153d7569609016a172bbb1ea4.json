{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ThunderCat - 20052024\\\\src\\\\components\\\\Postagem3.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as solidHeart, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport AvatarImage1 from '../assets/avatar.jpg';\nimport PostImage1 from '../assets/HD-wallpaper-reddeadredemption2-games-gta-online-rdr2-red-dead-redemption-2-rockstar-xbox.jpg';\nimport GlobalStyle from '../styles/GlobalStyles';\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\nimport '../styles/Postagem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Postagem2() {\n  _s();\n  const endPageRef = useRef(null);\n  const observerRef = useRef(null);\n  const [numPostagens, setNumPostagens] = useState(10);\n  const [curtidas, setCurtidas] = useState([]);\n  const [postagens, setPostagens] = useState([]);\n  const [descricaoNovaPostagem, setDescricaoNovaPostagem] = useState('');\n  const [imagemNovaPostagem, setImagemNovaPostagem] = useState(null);\n  useEffect(() => {\n    // Cria postagens iniciais\n    let postsIniciais = [];\n    for (let i = 0; i < numPostagens; i++) {\n      postsIniciais.push({\n        id: i,\n        // ID único para cada postagem\n        avatar: AvatarImage1,\n        image: PostImage1,\n        descricao: \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Adipisci, sint aut optio dese amet provident eum ullam?\"\n      });\n    }\n    setPostagens(postsIniciais);\n    setCurtidas(new Array(postsIniciais.length).fill(false)); // Inicializa o array de curtidas\n\n    // Observer para carregar mais postagens\n    observerRef.current = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && entry.target === endPageRef.current) {\n          setNumPostagens(prevNumPostagens => prevNumPostagens + 10);\n        }\n      });\n    }, {\n      threshold: 0.5\n    });\n    const currentObserver = observerRef.current;\n    const currentRef = endPageRef.current;\n    if (currentRef && currentObserver) {\n      currentObserver.observe(currentRef);\n    }\n    return () => {\n      if (currentRef && currentObserver) {\n        currentObserver.unobserve(currentRef);\n      }\n    };\n  }, []); // Apenas executa uma vez ao montar o componente\n\n  const handleCurtir = id => {\n    setCurtidas(prevCurtidas => {\n      const newCurtidas = [...prevCurtidas];\n      newCurtidas[id] = !newCurtidas[id];\n      return newCurtidas;\n    });\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagemNovaPostagem(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const criarNovoPost = () => {\n    if (!imagemNovaPostagem) {\n      alert('Por favor, carregue uma imagem para a postagem.');\n      return;\n    }\n    const novoPost = {\n      id: Date.now(),\n      // Gerar um ID único baseado no timestamp atual\n      avatar: AvatarImage1,\n      image: imagemNovaPostagem,\n      descricao: descricaoNovaPostagem // Usando o estado da nova descrição\n    };\n    setPostagens(prevPostagens => [novoPost, ...prevPostagens]);\n    setCurtidas(prevCurtidas => [false, ...prevCurtidas]); // Adiciona uma nova entrada para curtidas\n    setDescricaoNovaPostagem(''); // Limpa o input após adicionar\n    setImagemNovaPostagem(null); // Limpa a imagem após adicionar\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: descricaoNovaPostagem,\n      onChange: e => setDescricaoNovaPostagem(e.target.value),\n      placeholder: \"Digite a descri\\xE7\\xE3o da nova postagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: criarNovoPost,\n      children: \"Adicionar Postagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: postagens.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postagem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"informacoes\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usuario\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"miniaturaperfil\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.avatar,\n                alt: \"Avatar do usu\\xE1rio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nome-do-usuario\",\n              children: \"Usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image,\n          alt: \"Imagem da postagem\",\n          className: \"capa-post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conteudo-da-postagem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reacoes-icones\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon\",\n              onClick: () => handleCurtir(post.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: curtidas[post.id] ? solidHeart : faHeart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPaperPlane\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"descricao\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span\",\n              children: \"Usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), post.descricao]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: endPageRef,\n      style: {\n        height: '20px',\n        background: 'transparent'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(Postagem2, \"A3liSXU9b0cIoGjY5gKzBvvwWVU=\");\n_c = Postagem2;\nexport default Postagem2;\nvar _c;\n$RefreshReg$(_c, \"Postagem2\");","map":{"version":3,"names":["React","useRef","useEffect","useState","FontAwesomeIcon","faHeart","solidHeart","faPaperPlane","AvatarImage1","PostImage1","GlobalStyle","jsxDEV","_jsxDEV","Postagem2","_s","endPageRef","observerRef","numPostagens","setNumPostagens","curtidas","setCurtidas","postagens","setPostagens","descricaoNovaPostagem","setDescricaoNovaPostagem","imagemNovaPostagem","setImagemNovaPostagem","postsIniciais","i","push","id","avatar","image","descricao","Array","length","fill","current","IntersectionObserver","entries","forEach","entry","isIntersecting","target","prevNumPostagens","threshold","currentObserver","currentRef","observe","unobserve","handleCurtir","prevCurtidas","newCurtidas","handleImageUpload","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","criarNovoPost","alert","novoPost","Date","now","prevPostagens","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","accept","onClick","map","post","className","src","alt","icon","ref","style","height","background","_c","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/ThunderCat - 20052024/src/components/Postagem3.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as solidHeart, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\nimport AvatarImage1 from '../assets/avatar.jpg';\r\nimport PostImage1 from '../assets/HD-wallpaper-reddeadredemption2-games-gta-online-rdr2-red-dead-redemption-2-rockstar-xbox.jpg';\r\nimport GlobalStyle from '../styles/GlobalStyles';\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport '../styles/Postagem.css';\r\n\r\nfunction Postagem2() {\r\n    const endPageRef = useRef(null);\r\n    const observerRef = useRef(null);\r\n    const [numPostagens, setNumPostagens] = useState(10);\r\n    const [curtidas, setCurtidas] = useState([]);\r\n    const [postagens, setPostagens] = useState([]);\r\n    const [descricaoNovaPostagem, setDescricaoNovaPostagem] = useState('');\r\n    const [imagemNovaPostagem, setImagemNovaPostagem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Cria postagens iniciais\r\n        let postsIniciais = [];\r\n        for (let i = 0; i < numPostagens; i++) {\r\n            postsIniciais.push({\r\n                id: i, // ID único para cada postagem\r\n                avatar: AvatarImage1,\r\n                image: PostImage1,\r\n                descricao: \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Adipisci, sint aut optio dese amet provident eum ullam?\"\r\n            });\r\n        }\r\n        setPostagens(postsIniciais);\r\n        setCurtidas(new Array(postsIniciais.length).fill(false)); // Inicializa o array de curtidas\r\n\r\n        // Observer para carregar mais postagens\r\n        observerRef.current = new IntersectionObserver((entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting && entry.target === endPageRef.current) {\r\n                    setNumPostagens(prevNumPostagens => prevNumPostagens + 10);\r\n                }\r\n            });\r\n        }, { threshold: 0.5 });\r\n\r\n        const currentObserver = observerRef.current;\r\n        const currentRef = endPageRef.current;\r\n\r\n        if (currentRef && currentObserver) {\r\n            currentObserver.observe(currentRef);\r\n        }\r\n\r\n        return () => {\r\n            if (currentRef && currentObserver) {\r\n                currentObserver.unobserve(currentRef);\r\n            }\r\n        };\r\n    }, []); // Apenas executa uma vez ao montar o componente\r\n\r\n    const handleCurtir = (id) => {\r\n        setCurtidas(prevCurtidas => {\r\n            const newCurtidas = [...prevCurtidas];\r\n            newCurtidas[id] = !newCurtidas[id];\r\n            return newCurtidas;\r\n        });\r\n    };\r\n\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setImagemNovaPostagem(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const criarNovoPost = () => {\r\n        if (!imagemNovaPostagem) {\r\n            alert('Por favor, carregue uma imagem para a postagem.');\r\n            return;\r\n        }\r\n        const novoPost = {\r\n            id: Date.now(), // Gerar um ID único baseado no timestamp atual\r\n            avatar: AvatarImage1,\r\n            image: imagemNovaPostagem,\r\n            descricao: descricaoNovaPostagem // Usando o estado da nova descrição\r\n        };\r\n        setPostagens(prevPostagens => [novoPost, ...prevPostagens]);\r\n        setCurtidas(prevCurtidas => [false, ...prevCurtidas]); // Adiciona uma nova entrada para curtidas\r\n        setDescricaoNovaPostagem(''); // Limpa o input após adicionar\r\n        setImagemNovaPostagem(null); // Limpa a imagem após adicionar\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <GlobalStyle />\r\n            <input\r\n                type=\"text\"\r\n                value={descricaoNovaPostagem}\r\n                onChange={e => setDescricaoNovaPostagem(e.target.value)}\r\n                placeholder=\"Digite a descrição da nova postagem\"\r\n            />\r\n            <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n            />\r\n            <button onClick={criarNovoPost}>Adicionar Postagem</button>\r\n            <div>\r\n                {postagens.map((post) => (\r\n                    <div key={post.id} className=\"postagem\">\r\n                        <div className=\"informacoes\">\r\n                            <div className=\"usuario\">\r\n                                <div className=\"miniaturaperfil\">\r\n                                    <img src={post.avatar} alt=\"Avatar do usuário\" />\r\n                                </div>\r\n                                <p className=\"nome-do-usuario\">Usuario</p>\r\n                            </div>\r\n                        </div>\r\n                        <img src={post.image} alt=\"Imagem da postagem\" className=\"capa-post\" />\r\n                        <div className=\"conteudo-da-postagem\">\r\n                            <div className=\"reacoes-icones\">\r\n                                <button className=\"icon\" onClick={() => handleCurtir(post.id)}>\r\n                                    <FontAwesomeIcon icon={curtidas[post.id] ? solidHeart : faHeart} />\r\n                                </button>\r\n                                <button className=\"icon\">\r\n                                    <FontAwesomeIcon icon={faPaperPlane} />\r\n                                </button>\r\n                            </div>\r\n                            <p className=\"descricao\">\r\n                                <span className=\"span\">Usuario</span>\r\n                                {post.descricao}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div ref={endPageRef} style={{ height: '20px', background: 'transparent' }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Postagem2;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,IAAIC,UAAU,EAAEC,YAAY,QAAQ,mCAAmC;AACvF,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,UAAU,MAAM,yGAAyG;AAChI,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASL,OAAO,QAAQ,qCAAqC;AAC7D,OAAO,wBAAwB;AAAC,SAAAM,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,UAAU,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMe,WAAW,GAAGf,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACsB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAElED,SAAS,CAAC,MAAM;IACZ;IACA,IAAIyB,aAAa,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,YAAY,EAAEW,CAAC,EAAE,EAAE;MACnCD,aAAa,CAACE,IAAI,CAAC;QACfC,EAAE,EAAEF,CAAC;QAAE;QACPG,MAAM,EAAEvB,YAAY;QACpBwB,KAAK,EAAEvB,UAAU;QACjBwB,SAAS,EAAE;MACf,CAAC,CAAC;IACN;IACAX,YAAY,CAACK,aAAa,CAAC;IAC3BP,WAAW,CAAC,IAAIc,KAAK,CAACP,aAAa,CAACQ,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE1D;IACApB,WAAW,CAACqB,OAAO,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACxDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACrB,IAAIA,KAAK,CAACC,cAAc,IAAID,KAAK,CAACE,MAAM,KAAK5B,UAAU,CAACsB,OAAO,EAAE;UAC7DnB,eAAe,CAAC0B,gBAAgB,IAAIA,gBAAgB,GAAG,EAAE,CAAC;QAC9D;MACJ,CAAC,CAAC;IACN,CAAC,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IAEtB,MAAMC,eAAe,GAAG9B,WAAW,CAACqB,OAAO;IAC3C,MAAMU,UAAU,GAAGhC,UAAU,CAACsB,OAAO;IAErC,IAAIU,UAAU,IAAID,eAAe,EAAE;MAC/BA,eAAe,CAACE,OAAO,CAACD,UAAU,CAAC;IACvC;IAEA,OAAO,MAAM;MACT,IAAIA,UAAU,IAAID,eAAe,EAAE;QAC/BA,eAAe,CAACG,SAAS,CAACF,UAAU,CAAC;MACzC;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMG,YAAY,GAAIpB,EAAE,IAAK;IACzBV,WAAW,CAAC+B,YAAY,IAAI;MACxB,MAAMC,WAAW,GAAG,CAAC,GAAGD,YAAY,CAAC;MACrCC,WAAW,CAACtB,EAAE,CAAC,GAAG,CAACsB,WAAW,CAACtB,EAAE,CAAC;MAClC,OAAOsB,WAAW;IACtB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAMC,IAAI,GAAGD,KAAK,CAACX,MAAM,CAACa,KAAK,CAAC,CAAC,CAAC;IAClC,IAAID,IAAI,EAAE;MACN,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACrBjC,qBAAqB,CAAC+B,MAAM,CAACG,MAAM,CAAC;MACxC,CAAC;MACDH,MAAM,CAACI,aAAa,CAACN,IAAI,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMO,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACrC,kBAAkB,EAAE;MACrBsC,KAAK,CAAC,iDAAiD,CAAC;MACxD;IACJ;IACA,MAAMC,QAAQ,GAAG;MACblC,EAAE,EAAEmC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBnC,MAAM,EAAEvB,YAAY;MACpBwB,KAAK,EAAEP,kBAAkB;MACzBQ,SAAS,EAAEV,qBAAqB,CAAC;IACrC,CAAC;IACDD,YAAY,CAAC6C,aAAa,IAAI,CAACH,QAAQ,EAAE,GAAGG,aAAa,CAAC,CAAC;IAC3D/C,WAAW,CAAC+B,YAAY,IAAI,CAAC,KAAK,EAAE,GAAGA,YAAY,CAAC,CAAC,CAAC,CAAC;IACvD3B,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9BE,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,oBACId,OAAA;IAAAwD,QAAA,gBACIxD,OAAA,CAACF,WAAW;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf5D,OAAA;MACI6D,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnD,qBAAsB;MAC7BoD,QAAQ,EAAEC,CAAC,IAAIpD,wBAAwB,CAACoD,CAAC,CAACjC,MAAM,CAAC+B,KAAK,CAAE;MACxDG,WAAW,EAAC;IAAqC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACF5D,OAAA;MACI6D,IAAI,EAAC,MAAM;MACXK,MAAM,EAAC,SAAS;MAChBH,QAAQ,EAAEtB;IAAkB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF5D,OAAA;MAAQmE,OAAO,EAAEjB,aAAc;MAAAM,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3D5D,OAAA;MAAAwD,QAAA,EACK/C,SAAS,CAAC2D,GAAG,CAAEC,IAAI,iBAChBrE,OAAA;QAAmBsE,SAAS,EAAC,UAAU;QAAAd,QAAA,gBACnCxD,OAAA;UAAKsE,SAAS,EAAC,aAAa;UAAAd,QAAA,eACxBxD,OAAA;YAAKsE,SAAS,EAAC,SAAS;YAAAd,QAAA,gBACpBxD,OAAA;cAAKsE,SAAS,EAAC,iBAAiB;cAAAd,QAAA,eAC5BxD,OAAA;gBAAKuE,GAAG,EAAEF,IAAI,CAAClD,MAAO;gBAACqD,GAAG,EAAC;cAAmB;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACN5D,OAAA;cAAGsE,SAAS,EAAC,iBAAiB;cAAAd,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN5D,OAAA;UAAKuE,GAAG,EAAEF,IAAI,CAACjD,KAAM;UAACoD,GAAG,EAAC,oBAAoB;UAACF,SAAS,EAAC;QAAW;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvE5D,OAAA;UAAKsE,SAAS,EAAC,sBAAsB;UAAAd,QAAA,gBACjCxD,OAAA;YAAKsE,SAAS,EAAC,gBAAgB;YAAAd,QAAA,gBAC3BxD,OAAA;cAAQsE,SAAS,EAAC,MAAM;cAACH,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAAC+B,IAAI,CAACnD,EAAE,CAAE;cAAAsC,QAAA,eAC1DxD,OAAA,CAACR,eAAe;gBAACiF,IAAI,EAAElE,QAAQ,CAAC8D,IAAI,CAACnD,EAAE,CAAC,GAAGxB,UAAU,GAAGD;cAAQ;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/D,CAAC,eACT5D,OAAA;cAAQsE,SAAS,EAAC,MAAM;cAAAd,QAAA,eACpBxD,OAAA,CAACR,eAAe;gBAACiF,IAAI,EAAE9E;cAAa;gBAAA8D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACN5D,OAAA;YAAGsE,SAAS,EAAC,WAAW;YAAAd,QAAA,gBACpBxD,OAAA;cAAMsE,SAAS,EAAC,MAAM;cAAAd,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACpCS,IAAI,CAAChD,SAAS;UAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAvBAS,IAAI,CAACnD,EAAE;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBZ,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN5D,OAAA;MAAK0E,GAAG,EAAEvE,UAAW;MAACwE,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAc;IAAE;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEd;AAAC1D,EAAA,CAjIQD,SAAS;AAAA6E,EAAA,GAAT7E,SAAS;AAmIlB,eAAeA,SAAS;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}