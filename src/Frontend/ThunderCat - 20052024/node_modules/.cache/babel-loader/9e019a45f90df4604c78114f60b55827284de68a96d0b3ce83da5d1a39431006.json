{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ThunderCat - 06052024\\\\src\\\\components\\\\Postagem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Postagem.css'; // Importe o arquivo CSS diretamente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Postagem() {\n  _s();\n  const [postagens, setPostagens] = useState([]);\n\n  // Simulação de dados de postagens\n  useEffect(() => {\n    // Aqui você pode fazer uma solicitação ao servidor para obter as postagens iniciais\n    const dadosIniciais = [{\n      usuario: {\n        nome: 'Felipi Amorim',\n        fotoPerfil: 'img/avatar.jpg'\n      },\n      imagem: 'img/HD-wallpaper-reddeadredemption2-games-gta-online-rdr2-red-dead-redemption-2-rockstar-xbox.jpg',\n      conteudo: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit...',\n      curtidas: 10000,\n      tempoPostagem: '7 minutos'\n    }\n    // Adicione mais postagens conforme necessário\n    ];\n    setPostagens(dadosIniciais);\n  }, []);\n\n  // Função para carregar mais postagens (simulação)\n  const carregarMaisPostagens = () => {\n    // Simule uma nova solicitação ao servidor ou carregamento de dados\n    // Aqui você adicionaria as postagens recém-carregadas ao estado de postagens\n    // Por simplicidade, estamos apenas adicionando uma nova postagem simulada\n    const novaPostagem = {\n      usuario: {\n        nome: 'Novo Usuário',\n        fotoPerfil: 'img/novo-usuario.jpg'\n      },\n      imagem: 'img/nova-imagem.jpg',\n      conteudo: 'Conteúdo da nova postagem...',\n      curtidas: 0,\n      tempoPostagem: 'Agora'\n    };\n    setPostagens([...postagens, novaPostagem]);\n  };\n\n  // Observador de evento de rolagem para detectar quando o usuário rola até o final da página\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        carregarMaisPostagens();\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: postagens.map((postagem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postagem\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"informacoes\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usuario\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"miniaturaperfil\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: postagem.usuario.fotoPerfil,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"nome-do-usuario\",\n            children: postagem.usuario.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"img/opcoes.jpg\",\n          alt: \"\",\n          className: \"opcoes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: postagem.imagem,\n        alt: \"\",\n        className: \"capa-post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conteudo-da-postagem\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"curtidas\",\n          children: [postagem.curtidas, \" curtidas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"descricao\",\n          children: postagem.conteudo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tempo-post\",\n          children: postagem.tempoPostagem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comentario-postagem\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"comentario-msg\",\n          name: \"msg\",\n          placeholder: \"Comentar Postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comentario-btn\",\n          type: \"submit\",\n          children: \"Postar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Postagem, \"wxRCZnX6E0g1hnciC6yuoaEKHyw=\");\n_c = Postagem;\nexport default Postagem;\nvar _c;\n$RefreshReg$(_c, \"Postagem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Postagem","_s","postagens","setPostagens","dadosIniciais","usuario","nome","fotoPerfil","imagem","conteudo","curtidas","tempoPostagem","carregarMaisPostagens","novaPostagem","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","children","map","postagem","index","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/ThunderCat - 06052024/src/components/Postagem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Postagem.css'; // Importe o arquivo CSS diretamente\r\n\r\nfunction Postagem() {\r\n    const [postagens, setPostagens] = useState([]);\r\n\r\n    // Simulação de dados de postagens\r\n    useEffect(() => {\r\n        // Aqui você pode fazer uma solicitação ao servidor para obter as postagens iniciais\r\n        const dadosIniciais = [\r\n            {\r\n                usuario: {\r\n                    nome: 'Felipi Amorim',\r\n                    fotoPerfil: 'img/avatar.jpg'\r\n                },\r\n                imagem: 'img/HD-wallpaper-reddeadredemption2-games-gta-online-rdr2-red-dead-redemption-2-rockstar-xbox.jpg',\r\n                conteudo: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit...',\r\n                curtidas: 10000,\r\n                tempoPostagem: '7 minutos'\r\n            },\r\n            // Adicione mais postagens conforme necessário\r\n        ];\r\n        setPostagens(dadosIniciais);\r\n    }, []);\r\n\r\n    // Função para carregar mais postagens (simulação)\r\n    const carregarMaisPostagens = () => {\r\n        // Simule uma nova solicitação ao servidor ou carregamento de dados\r\n        // Aqui você adicionaria as postagens recém-carregadas ao estado de postagens\r\n        // Por simplicidade, estamos apenas adicionando uma nova postagem simulada\r\n        const novaPostagem = {\r\n            usuario: {\r\n                nome: 'Novo Usuário',\r\n                fotoPerfil: 'img/novo-usuario.jpg'\r\n            },\r\n            imagem: 'img/nova-imagem.jpg',\r\n            conteudo: 'Conteúdo da nova postagem...',\r\n            curtidas: 0,\r\n            tempoPostagem: 'Agora'\r\n        };\r\n\r\n        setPostagens([...postagens, novaPostagem]);\r\n    };\r\n\r\n    // Observador de evento de rolagem para detectar quando o usuário rola até o final da página\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (\r\n                window.innerHeight + document.documentElement.scrollTop ===\r\n                document.documentElement.offsetHeight\r\n            ) {\r\n                carregarMaisPostagens();\r\n            }\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {postagens.map((postagem, index) => (\r\n                <div key={index} className=\"postagem\">\r\n                    <div className=\"informacoes\">\r\n                        <div className=\"usuario\">\r\n                            <div className=\"miniaturaperfil\">\r\n                                <img src={postagem.usuario.fotoPerfil} alt=\"\" />\r\n                            </div>\r\n                            <p className=\"nome-do-usuario\">{postagem.usuario.nome}</p>\r\n                        </div>\r\n                        <img src=\"img/opcoes.jpg\" alt=\"\" className=\"opcoes\" />\r\n                    </div>\r\n                    <img src={postagem.imagem} alt=\"\" className=\"capa-post\" />\r\n                    <div className=\"conteudo-da-postagem\">\r\n                        <p className=\"curtidas\">{postagem.curtidas} curtidas</p>\r\n                        <p className=\"descricao\">{postagem.conteudo}</p>\r\n                        <p className=\"tempo-post\">{postagem.tempoPostagem}</p>\r\n                    </div>\r\n                    <div className=\"comentario-postagem\">\r\n                        <input type=\"text\" className=\"comentario-msg\" name=\"msg\" placeholder=\"Comentar Postagem\" />\r\n                        <button className=\"comentario-btn\" type=\"submit\">Postar</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Postagem;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}