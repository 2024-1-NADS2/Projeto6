{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ThunderCat - 06052024\\\\src\\\\components\\\\postagem2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './style.css'; // Importe seu arquivo de estilo aqui\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const endPageRef = useRef(null);\n  useEffect(() => {\n    const getPosts = async () => {\n      setLoading(true);\n\n      // Substitua esta chamada de API pela sua lógica de busca de posts\n      const response = await fetch(`sua-api-aqui?page=${currentPage}`);\n      const data = await response.json();\n      if (data.length === 0) {\n        setCurrentPage(1);\n      } else {\n        setPosts(prevPosts => [...prevPosts, ...data]);\n        setCurrentPage(prevPage => prevPage + 1);\n      }\n      setLoading(false);\n    };\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        getPosts();\n      }\n    }, {\n      threshold: 1\n    });\n    observer.observe(endPageRef.current);\n    return () => {\n      observer.disconnect();\n    };\n  }, [currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: endPageRef,\n      id: \"endPage\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Feed, \"kCBKwicIoFyC3fbIWIYJ3+agzgM=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Feed","_s","posts","setPosts","currentPage","setCurrentPage","loading","setLoading","endPageRef","getPosts","response","fetch","data","json","length","prevPosts","prevPage","observer","IntersectionObserver","entries","isIntersecting","threshold","observe","current","disconnect","children","map","post","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","_c","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/ThunderCat - 06052024/src/components/postagem2.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './style.css'; // Importe seu arquivo de estilo aqui\r\n\r\nconst Feed = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const endPageRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            setLoading(true);\r\n\r\n            // Substitua esta chamada de API pela sua lógica de busca de posts\r\n            const response = await fetch(`sua-api-aqui?page=${currentPage}`);\r\n            const data = await response.json();\r\n\r\n            if (data.length === 0) {\r\n                setCurrentPage(1);\r\n            } else {\r\n                setPosts((prevPosts) => [...prevPosts, ...data]);\r\n                setCurrentPage((prevPage) => prevPage + 1);\r\n            }\r\n\r\n            setLoading(false);\r\n        };\r\n\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                if (entries[0].isIntersecting) {\r\n                    getPosts();\r\n                }\r\n            },\r\n            { threshold: 1 }\r\n        );\r\n\r\n        observer.observe(endPageRef.current);\r\n\r\n        return () => {\r\n            observer.disconnect();\r\n        };\r\n    }, [currentPage]);\r\n\r\n    return (\r\n        <main>\r\n            {posts.map((post, index) => (\r\n                <div key={index}>\r\n                    {/* Renderiza os detalhes do post */}\r\n                </div>\r\n            ))}\r\n            <div ref={endPageRef} id=\"endPage\" aria-hidden=\"true\"></div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Feed;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMa,UAAU,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzBF,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,qBAAoBP,WAAY,EAAC,CAAC;MAChE,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;QACnBT,cAAc,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACHF,QAAQ,CAAEY,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE,GAAGH,IAAI,CAAC,CAAC;QAChDP,cAAc,CAAEW,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MAC9C;MAEAT,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAED,MAAMU,QAAQ,GAAG,IAAIC,oBAAoB,CACpCC,OAAO,IAAK;MACT,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,EAAE;QAC3BX,QAAQ,CAAC,CAAC;MACd;IACJ,CAAC,EACD;MAAEY,SAAS,EAAE;IAAE,CACnB,CAAC;IAEDJ,QAAQ,CAACK,OAAO,CAACd,UAAU,CAACe,OAAO,CAAC;IAEpC,OAAO,MAAM;MACTN,QAAQ,CAACO,UAAU,CAAC,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,CAACpB,WAAW,CAAC,CAAC;EAEjB,oBACIL,OAAA;IAAA0B,QAAA,GACKvB,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnB7B,OAAA,YAAU6B,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACR,CAAC,eACFjC,OAAA;MAAKkC,GAAG,EAAEzB,UAAW;MAAC0B,EAAE,EAAC,SAAS;MAAC,eAAY;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEf,CAAC;AAAC/B,EAAA,CAlDID,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}