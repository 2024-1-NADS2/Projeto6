{"ast":null,"code":"const main = document.querySelector('main');\nconst endPage = document.getElementById('endPage');\nlet currentPage = 1;\nlet loading = false; // Variável para controlar se já estamos carregando posts\n\nfunction unliked(id) {\n  const likedPosts = JSON.parse(localStorage.getItem('likedPosts')) || [];\n  const updatedPost = likedPosts.filter(postId => postId !== id);\n  localStorage.setItem('likedPosts', JSON.stringify(updatedPost));\n}\nfunction likePost(event) {\n  const likedPosts = JSON.parse(localStorage.getItem('likedPosts')) || [];\n  const postIsLiked = likedPosts.find(postId => postId == event.target.id);\n  if (postIsLiked) {\n    event.target.textContent = 'like';\n    event.target.classList.remove('Liked');\n    return unliked(event.target.id);\n  }\n  event.target.textContent = 'liked';\n  event.target.classList.add('Liked');\n  likedPosts.push(event.target.id);\n  localStorage.setItem('likedPosts', JSON.stringify(likedPosts));\n}\nfunction createCard(article) {\n  const anchorElement = document.createElement('a');\n  const articleElement = document.createElement('article');\n  const titleElement = document.createElement('strong');\n  const descriptionElement = document.createElement('p');\n  const imageElement = document.createElement('img');\n  const likebutton = document.createElement('button');\n  titleElement.textContent = article.title;\n  descriptionElement.textContent = article.description;\n  imageElement.src = article.social_image;\n  anchorElement.href = article.url;\n  anchorElement.target = '_blank';\n  likebutton.textContent = 'Like';\n  likebutton.className = 'likebutton';\n  likebutton.id = article.id;\n  likebutton.addEventListener('click', likePost);\n  articleElement.appendChild(imageElement);\n  anchorElement.appendChild(titleElement);\n  anchorElement.appendChild(descriptionElement);\n  articleElement.appendChild(anchorElement);\n  articleElement.appendChild(likebutton);\n  return articleElement;\n}\nfunction createCards(articles) {\n  return articles.map(article => createCard(article));\n}\nasync function getpost() {\n  if (!loading) {\n    // Verifica se já estamos carregando posts\n    loading = true; // Define que estamos carregando posts\n    const response = await fetch(`https://dev.to/api/articles?per_page=0&page=${currentPage}`);\n    const data = await response.json();\n    const Cards = createCards(data);\n    Cards.forEach(card => {\n      main.appendChild(card);\n    });\n    if (data.length === 0) {\n      // Verifica se não há mais postagens disponíveis\n      currentPage = 1; // Reinicia currentPage para a primeira página\n    } else {\n      currentPage += 1; // Incrementa currentPage para a próxima página\n    }\n    loading = false; // Define que terminamos de carregar os posts\n  }\n}\nconst observer = new IntersectionObserver(entries => {\n  if (entries[0].isIntersecting) getpost();\n});\nobserver.observe(endPage);","map":{"version":3,"names":["main","document","querySelector","endPage","getElementById","currentPage","loading","unliked","id","likedPosts","JSON","parse","localStorage","getItem","updatedPost","filter","postId","setItem","stringify","likePost","event","postIsLiked","find","target","textContent","classList","remove","add","push","createCard","article","anchorElement","createElement","articleElement","titleElement","descriptionElement","imageElement","likebutton","title","description","src","social_image","href","url","className","addEventListener","appendChild","createCards","articles","map","getpost","response","fetch","data","json","Cards","forEach","card","length","observer","IntersectionObserver","entries","isIntersecting","observe"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/ThunderCat - 06052024/src/styles/Postagem2.js"],"sourcesContent":["const main = document.querySelector('main');\nconst endPage = document.getElementById('endPage');\nlet currentPage = 1;\nlet loading = false; // Variável para controlar se já estamos carregando posts\n\nfunction unliked(id) {\n    const likedPosts = JSON.parse(localStorage.getItem('likedPosts')) || [];\n    const updatedPost = likedPosts.filter((postId) => postId !== id);\n    localStorage.setItem('likedPosts', JSON.stringify(updatedPost));\n}\n\nfunction likePost(event) {\n    const likedPosts = JSON.parse(localStorage.getItem('likedPosts')) || [];\n    const postIsLiked = likedPosts.find((postId) => postId == event.target.id);\n    if (postIsLiked) {\n        event.target.textContent = 'like'\n        event.target.classList.remove('Liked');\n        return unliked(event.target.id);\n    }\n    event.target.textContent = 'liked'; \n    event.target.classList.add('Liked');\n    likedPosts.push(event.target.id);\n    localStorage.setItem('likedPosts', JSON.stringify(likedPosts));\n}\n\nfunction createCard(article) {\n    const anchorElement = document.createElement('a');\n    const articleElement = document.createElement('article');\n    const titleElement = document.createElement('strong');\n    const descriptionElement = document.createElement('p');\n    const imageElement = document.createElement('img');\n    const likebutton = document.createElement('button');\n    titleElement.textContent = article.title;\n    descriptionElement.textContent = article.description;\n    imageElement.src = article.social_image;\n    anchorElement.href = article.url;\n    anchorElement.target = '_blank';\n    likebutton.textContent = 'Like';\n    likebutton.className = 'likebutton';\n    likebutton.id = article.id;\n    likebutton.addEventListener('click', likePost);\n    articleElement.appendChild(imageElement);\n    anchorElement.appendChild(titleElement);\n    anchorElement.appendChild(descriptionElement);\n    articleElement.appendChild(anchorElement);\n    articleElement.appendChild(likebutton);\n    return articleElement;\n}\n\nfunction createCards(articles) {\n    return articles.map((article) => createCard(article))\n}\n\nasync function getpost() {\n    if (!loading) { // Verifica se já estamos carregando posts\n        loading = true; // Define que estamos carregando posts\n        const response = await fetch(`https://dev.to/api/articles?per_page=0&page=${currentPage}`);\n        const data = await response.json();\n        const Cards = createCards(data);\n        Cards.forEach((card) => {\n            main.appendChild(card);\n        });\n\n        if (data.length === 0) { // Verifica se não há mais postagens disponíveis\n            currentPage = 1; // Reinicia currentPage para a primeira página\n        } else {\n            currentPage += 1; // Incrementa currentPage para a próxima página\n        }\n\n        loading = false; // Define que terminamos de carregar os posts\n    }\n}\n\nconst observer = new IntersectionObserver((entries) => {\n    if (entries[0].isIntersecting) getpost()\n});\nobserver.observe(endPage);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}